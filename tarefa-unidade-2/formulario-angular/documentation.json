{
    "pipes": [],
    "interfaces": [
        {
            "name": "IKeyedProduct",
            "id": "interface-IKeyedProduct-03d5f2ed893b991a10b9e0913065d615",
            "file": "src/components/ProductList/ProductList.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { v4 as uuid } from \"uuid\";\nimport { IProduct } from \"../interfaces\";\n\ninterface IKeyedProduct extends IProduct {\n  uuid: String\n}\n\n@Injectable(({ providedIn: 'root' }))\nexport class ProductListService {\n  private products: Array<IKeyedProduct> = [];\n  \n  get currentProducts(): Array<IKeyedProduct> {\n    return this.products;\n  }\n\n  setProducts(newProducts: Array<IProduct>) {\n    this.products = newProducts.map(product => ({ ...product, uuid: uuid() }));\n  }\n\n  updateProduct(productUUID: String, newData: IProduct) {\n    this.products = this.products.map(product => {\n      if (product.uuid === productUUID)\n        return { ...product, ...newData };\n      return product;\n    })\n  }\n}",
            "properties": [
                {
                    "name": "uuid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "IProduct"
        },
        {
            "name": "IProduct",
            "id": "interface-IProduct-78da31b61f67a83ea7d6a473f61ec3ed",
            "file": "src/components/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IProduct {\n  price: Number;\n  imageSrc: String | undefined;\n  title: String;\n  description: String;\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "imageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String | undefined",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ProductListService",
            "id": "injectable-ProductListService-03d5f2ed893b991a10b9e0913065d615",
            "file": "src/components/ProductList/ProductList.service.ts",
            "properties": [
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<IKeyedProduct>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "setProducts",
                    "args": [
                        {
                            "name": "newProducts",
                            "type": "Array<IProduct>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newProducts",
                            "type": "Array<IProduct>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateProduct",
                    "args": [
                        {
                            "name": "productUUID",
                            "type": "String",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newData",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productUUID",
                            "type": "String",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newData",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { v4 as uuid } from \"uuid\";\nimport { IProduct } from \"../interfaces\";\n\ninterface IKeyedProduct extends IProduct {\n  uuid: String\n}\n\n@Injectable(({ providedIn: 'root' }))\nexport class ProductListService {\n  private products: Array<IKeyedProduct> = [];\n  \n  get currentProducts(): Array<IKeyedProduct> {\n    return this.products;\n  }\n\n  setProducts(newProducts: Array<IProduct>) {\n    this.products = newProducts.map(product => ({ ...product, uuid: uuid() }));\n  }\n\n  updateProduct(productUUID: String, newData: IProduct) {\n    this.products = this.products.map(product => {\n      if (product.uuid === productUUID)\n        return { ...product, ...newData };\n      return product;\n    })\n  }\n}",
            "accessors": {
                "currentProducts": {
                    "name": "currentProducts",
                    "getSignature": {
                        "name": "currentProducts",
                        "type": "",
                        "returnType": "Array<IKeyedProduct>",
                        "line": 13
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6b8c8089ce2fb92c9941c807cc104916",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'formulario-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'formulario-angular';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div>To run this app, use storybook</div>"
        },
        {
            "name": "EditableProductComponent",
            "id": "component-EditableProductComponent-44fdba857dd9f53cd35fe84c16ded25f",
            "file": "src/components/EditableProduct/EditableProduct.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "editable-product",
            "styleUrls": [
                "./EditableProduct.css"
            ],
            "styles": [],
            "templateUrl": [
                "./EditableProduct.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "String"
                },
                {
                    "name": "imageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "String | undefined"
                },
                {
                    "name": "price",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Number"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "String"
                }
            ],
            "outputsClass": [
                {
                    "name": "onSave",
                    "defaultValue": "new EventEmitter<IProduct>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isEditing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onSaveProduct",
                    "args": [
                        {
                            "name": "newData",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "newData",
                            "type": "IProduct",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIsEditing",
                    "args": [
                        {
                            "name": "isEditing",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "isEditing",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { IProduct } from \"../interfaces\";\n\n@Component({\n  selector: 'editable-product',\n  templateUrl: './EditableProduct.html',\n  styleUrls: ['./EditableProduct.css']\n})\nexport default class EditableProductComponent {\n  @Input()\n  price: Number = 0;\n\n  @Input()\n  imageSrc: String | undefined;\n\n  @Input()\n  title: String = '';\n\n  @Input()\n  description: String = '';\n\n  @Output()\n  onSave = new EventEmitter<IProduct>();\n\n  public isEditing = false;\n\n  public setIsEditing(isEditing: boolean) {\n    this.isEditing = isEditing;\n  }\n\n  public onSaveProduct(newData: IProduct) {\n    this.setIsEditing(false);\n    this.onSave.emit(newData);\n  }\n};",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../Base.css';\n\n.editable-product {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: min-content;\n}\n\n.editable-product > button {\n  margin-bottom: 16px;\n}\n",
                    "styleUrl": "./EditableProduct.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"editable-product\">\n  <ng-template [ngIf]=\"isEditing\">\n    <product-form\n      [price]=\"price\"\n      [imageSrc]=\"imageSrc\"\n      [title]=\"title\"\n      [description]=\"description\"\n      (onSave)=\"onSaveProduct($event)\"\n    ></product-form>\n  </ng-template>\n  <ng-template [ngIf]=\"!isEditing\">\n    <button (click)=\"setIsEditing(true)\">\n      Click here to edit\n    </button>\n    <product-details\n      [price]=\"price\"\n      [imageSrc]=\"imageSrc\"\n      [title]=\"title\"\n      [description]=\"description\"\n    ></product-details>\n  </ng-template>\n</div>"
        },
        {
            "name": "ProductDetailsComponent",
            "id": "component-ProductDetailsComponent-c9823c50b5f97be4b2282619ca1e1c2c",
            "file": "src/components/ProductDetails/ProductDetails.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "product-details",
            "styleUrls": [
                "./ProductDetails.css"
            ],
            "styles": [],
            "templateUrl": [
                "./ProductDetails.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "String"
                },
                {
                    "name": "imageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "String | undefined"
                },
                {
                    "name": "price",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Number"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "String"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "formatPrice",
                    "args": [
                        {
                            "name": "price",
                            "type": "Number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "price",
                            "type": "Number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: 'product-details',\n  templateUrl: './ProductDetails.html',\n  styleUrls: ['./ProductDetails.css']\n})\nexport default class ProductDetailsComponent {\n  @Input()\n  price: Number = 0;\n\n  @Input()\n  imageSrc: String | undefined;\n\n  @Input()\n  title: String = '';\n\n  @Input()\n  description: String = '';\n\n  public formatPrice(price: Number) {\n    const parsedPrice = parseFloat(price.toString());\n    return `R$ ${parsedPrice.toFixed(2)}`;\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../Base.css';\n\n.product-details {\n  border-radius: 5px;\n  box-shadow: 0px 0px 1px 1px #808080;\n  box-sizing: border-box;\n  display: inline-block;\n  width: min-content;\n  padding: 32px;\n}\n\n.product-details__body {\n  margin-bottom: 16px;\n}\n\n.product-details__footer {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.product-details__image-container {\n  align-items: center;\n  background-color: #f1f1f1;\n  border-radius: 10px;\n  display: flex;\n  font-size: 1.5rem;\n  height: 350px;\n  justify-content: center;\n  overflow: hidden;\n  position: relative;\n  width: 350px;\n}\n\n.product-details__image {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n}\n\n.product-details__price {\n  background-color: #ff0000;\n  border-radius: 5px;\n  box-sizing: border-box;\n  color: #fff;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 8px 16px;\n  position: absolute;\n  right: 16px;\n  top: 16px;\n}\n\n.product-details__title,\n.product-details__description {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.product-details__title {\n  font-size: 2rem;\n  text-align: center;\n}\n\n.product-details__description {\n  font-size: 1.5rem;\n  font-weight: normal;\n  text-align: center;\n}\n\n",
                    "styleUrl": "./ProductDetails.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"product-details\">\n  <div class=\"product-details__body\">\n    <div class=\"product-details__image-container\" >\n      <ng-template [ngIf]=\"!!imageSrc\">\n        <img\n          alt=\"Product\"\n          class=\"product-details__image\"\n          [src]=\"imageSrc\"\n        />\n      </ng-template>\n      <ng-template [ngIf]=\"!imageSrc\">\n        No image\n      </ng-template>\n      <span class=\"product-details__price\">\n        {{ formatPrice(price) }}\n      </span>\n    </div>\n    <h3 class=\"product-details__title\">{{ title }}</h3>\n    <h4 class=\"product-details__description\">{{ description }}</h4>\n  </div>\n  <div class=\"product-details__footer\">\n    <button>Buy Now</button>\n  </div>\n</div>"
        },
        {
            "name": "ProductFormComponent",
            "id": "component-ProductFormComponent-05b8d9a23025cc9f455fbf70ec411caf",
            "file": "src/components/ProductForm/ProductForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "product-form",
            "styleUrls": [
                "./ProductForm.css"
            ],
            "styles": [],
            "templateUrl": [
                "./ProductForm.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "String"
                },
                {
                    "name": "imageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "String | undefined"
                },
                {
                    "name": "price",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Number"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "String"
                }
            ],
            "outputsClass": [
                {
                    "name": "onSave",
                    "defaultValue": "new EventEmitter<IProduct>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "error",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String | undefined",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "formData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "schema",
                    "defaultValue": "useYup({\n    title: {\n      type: 'text',\n      required: true \n    },\n    description: {\n      type: 'text',\n      required: true \n    },\n    price: {\n      type: 'number',\n      required: true \n    },\n    imageSrc: { type: 'url' }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getError",
                    "args": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFormChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { IProduct } from \"../interfaces\";\nimport { useYup } from './validators';\n\n@Component({\n  selector: 'product-form',\n  templateUrl: './ProductForm.html',\n  styleUrls: ['./ProductForm.css']\n})\nexport default class ProductFormComponent implements OnChanges{\n  @Input()\n  price: Number = 0;\n\n  @Input()\n  imageSrc: String | undefined;\n\n  @Input()\n  title: String = '';\n\n  @Input()\n  description: String = '';\n\n  @Output()\n  onSave = new EventEmitter<IProduct>();\n\n  public formData: IProduct;\n\n  private error: String | undefined = '';\n\n  private schema = useYup({\n    title: {\n      type: 'text',\n      required: true \n    },\n    description: {\n      type: 'text',\n      required: true \n    },\n    price: {\n      type: 'number',\n      required: true \n    },\n    imageSrc: { type: 'url' }\n  });\n\n  public getError(field: string) {\n    if (this.error && this.error.startsWith(field))\n      return this.error.split(' ').slice(1).join(' ');\n    return;\n  }\n\n  public handleFormChange() {\n    this.schema\n      .validate(this.formData)\n      .then(() => this.error = undefined)\n      .catch((err) => this.error = err && err.message);\n  }\n\n  public onSubmit(event: Event) {\n    event.preventDefault();\n    this.onSave.emit(this.formData);\n  }\n\n  constructor() {\n    this.formData = {\n      price: this.price,\n      imageSrc: this.imageSrc,\n      title: this.title,\n      description: this.description\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.price)\n      this.formData.price = changes.price.currentValue;\n    if (changes.imageSrc)\n      this.formData.imageSrc = changes.imageSrc.currentValue;\n    if (changes.title)\n      this.formData.title = changes.title.currentValue;\n    if (changes.description)\n      this.formData.description = changes.description.currentValue;\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n@import '../Base.css';\n\n.product-form {\n  border-radius: 5px;\n  box-shadow: 0px 0px 1px 1px #808080;\n  padding: 32px;\n  width: 300px;\n}\n\n.product-form label,\n.product-form input,\n.product-form textarea {\n  display: block;\n}\n\n.product-form label {\n  font-weight: bold;\n  margin-bottom: 8px;\n}\n\n.product-form input,\n.product-form textarea {\n  box-sizing: border-box;\n  margin-top: 4px;\n  max-width: 100%;\n  min-width: 100%;\n  padding: 4px 8px;\n}\n\n.product-form__error-message {\n  color: #ff0000;\n  display: inline-block;\n  font-size: 0.9rem;\n  font-weight: lighter;\n  margin-top: 4px;\n}\n\n.product-form__error-message::before {\n  content: 'This ';\n}\n",
                    "styleUrl": "./ProductForm.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 62
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<form\n  class=\"product-form\"\n  (submit)=\"onSubmit($event)\"\n>\n  <label>\n    Title\n    <input\n      [(ngModel)]=\"formData.title\"\n      (ngModelChange)=\"handleFormChange()\"\n      name=\"title\"\n      placeholder=\"Smart Watch\"\n    />\n    <ng-template [ngIf]=\"getError('title')\">\n      <span class=\"product-form__error-message\">\n        {{ getError('title') }}\n      </span>\n    </ng-template>\n  </label>\n  <label>\n    Description\n    <textarea\n      [(ngModel)]=\"formData.description\"\n      (ngModelChange)=\"handleFormChange()\"\n      name=\"description\"\n      placeholder=\"This is a nice smart watch used to monitor your life\"\n    ></textarea>\n    <ng-template [ngIf]=\"getError('description')\">\n      <span class=\"product-form__error-message\">\n        {{ getError('description') }}\n      </span>\n    </ng-template>\n  </label>\n  <label>\n    Price\n    <input\n      [(ngModel)]=\"formData.price\"\n      (ngModelChange)=\"handleFormChange()\"\n      name=\"price\"\n      type=\"number\"\n      placeholder=\"99.99\"\n    />\n    <ng-template [ngIf]=\"getError('price')\">\n      <span class=\"product-form__error-message\">\n        {{ getError('price') }}\n      </span>\n    </ng-template>\n  </label>\n  <label>\n    Image URL\n    <input\n      [(ngModel)]=\"formData.imageSrc\"\n      (ngModelChange)=\"handleFormChange()\"\n      name=\"imageSrc\"\n      type=\"url\"\n      placeholder=\"http://image.jpg\"\n    />\n    <ng-template [ngIf]=\"getError('imageSrc')\">\n      <span class=\"product-form__error-message\">\n        {{ getError('imageSrc') }}\n      </span>\n    </ng-template>\n  </label>\n  <button type=\"submit\" [disabled]=\"!!error\">\n    Save Changes\n  </button>\n</form>"
        },
        {
            "name": "ProductListComponent",
            "id": "component-ProductListComponent-2c7a4ac3726eb738b2c333602fd33a99",
            "file": "src/components/ProductList/ProductList.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "product-list",
            "styleUrls": [
                "./ProductList.css"
            ],
            "styles": [],
            "templateUrl": [
                "./ProductList.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Array<IProduct>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "productListService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductListService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { ProductListService } from './ProductList.service';\nimport { IProduct } from \"../interfaces\";\n\n@Component({\n  selector: 'product-list',\n  templateUrl: './ProductList.html',\n  styleUrls: ['./ProductList.css']\n})\nexport default class ProductListComponent implements OnChanges {\n  @Input()\n  products: Array<IProduct> = [];\n\n  constructor(public productListService: ProductListService) {};\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.products)\n      this.productListService.setProducts(changes.products.currentValue);\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../Base.css';\n\n.product-list {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.product-list > div {\n  margin: 16px;\n}",
                    "styleUrl": "./ProductList.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productListService",
                        "type": "ProductListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "productListService",
                        "type": "ProductListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"product-list\">\n  <div *ngFor=\"let product of productListService.currentProducts\">\n    <editable-product\n      [price]=\"product.price\"\n      [imageSrc]=\"product.imageSrc\"\n      [title]=\"product.title\"\n      [description]=\"product.description\"\n      (onSave)=\"productListService.updateProduct(product.uuid, $event)\"\n    ></editable-product>\n  </div>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-2013c334aa32516f060796edad37d117",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditableProduct.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductDetails.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductList.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditableProduct.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<EditableProduct>",
                "defaultValue": "(args: EditableProduct) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductDetails.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProductDetails>",
                "defaultValue": "(args: ProductDetails) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProductForm>",
                "defaultValue": "(args: ProductForm) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductList.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProductList>",
                "defaultValue": "(args: ProductList) => ({\n  props: args,\n})"
            },
            {
                "name": "WithoutImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ProductDetails.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "yupShapes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/ProductForm/validators.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  url: shapeWrapper(() => yup.string().url()),\n  text: shapeWrapper(yup.string),\n  number: shapeWrapper(yup.number)\n}"
            }
        ],
        "functions": [
            {
                "name": "shapeWrapper",
                "file": "src/components/ProductForm/validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "shapeFn",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "shapeFn",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useYup",
                "file": "src/components/ProductForm/validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "formShape",
                        "type": "object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "formShape",
                        "type": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/EditableProduct.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditableProduct.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditableProduct.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<EditableProduct>",
                    "defaultValue": "(args: EditableProduct) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/ProductDetails.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductDetails.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductDetails.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProductDetails>",
                    "defaultValue": "(args: ProductDetails) => ({\n  props: args,\n})"
                },
                {
                    "name": "WithoutImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductDetails.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/ProductForm.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProductForm>",
                    "defaultValue": "(args: ProductForm) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/ProductList.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductList.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ProductList.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProductList>",
                    "defaultValue": "(args: ProductList) => ({\n  props: args,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/components/ProductForm/validators.ts": [
                {
                    "name": "yupShapes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/ProductForm/validators.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  url: shapeWrapper(() => yup.string().url()),\n  text: shapeWrapper(yup.string),\n  number: shapeWrapper(yup.number)\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/components/ProductForm/validators.ts": [
                {
                    "name": "shapeWrapper",
                    "file": "src/components/ProductForm/validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "shapeFn",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "shapeFn",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "useYup",
                    "file": "src/components/ProductForm/validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "formShape",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "formShape",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/components/EditableProduct/EditableProduct.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditableProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/components/ProductDetails/ProductDetails.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/components/ProductForm/ProductForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/components/ProductForm/validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "shapeWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/ProductForm/validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useYup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/ProductForm/validators.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "yupShapes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/ProductList/ProductList.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/components/ProductList/ProductList.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductListService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/ProductList/ProductList.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IKeyedProduct",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/components/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProduct",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditableProduct.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditableProduct.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductDetails.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductDetails.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductDetails.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductList.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ProductList.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}